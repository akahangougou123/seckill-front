{"remainingRequest":"/Users/akahandao/Desktop/毕业设计/vue-store/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/akahandao/Desktop/毕业设计/vue-store/src/components/MyRegister.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/akahandao/Desktop/毕业设计/vue-store/src/components/MyRegister.vue","mtime":1678758989847},{"path":"/Users/akahandao/Desktop/毕业设计/vue-store/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akahandao/Desktop/毕业设计/vue-store/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/akahandao/Desktop/毕业设计/vue-store/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akahandao/Desktop/毕业设计/vue-store/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBtZDUgZnJvbSAnanMtbWQ1JwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk15UmVnaXN0ZXIiLAogIHByb3BzOiBbInJlZ2lzdGVyIl0sCiAgZGF0YSgpIHsKICAgIC8vIOeUqOaIt+WQjeeahOagoemqjOaWueazlQogICAgbGV0IHZhbGlkYXRlTW9iaWxlID0gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPT4gewogICAgICBjb25zdCBwaG9uZVJlZyA9IC9eMVszLTldXGR7OX0kLwogICAgICBpZiAoIXZhbHVlKSB7CiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG5ldyBFcnJvcign6K+36L6T5YWl5omL5py65Y+356CBJykpCiAgICAgIH0KICAgICAgaWYgKHBob25lUmVnLnRlc3QodmFsdWUpKSB7CiAgICAgICAgY2FsbGJhY2soKQogICAgICB9IGVsc2UgewogICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcign6K+36L6T5YWl5q2j56Gu55qE5omL5py65Y+356CBJykpCiAgICAgIH0KICAgIH07CiAgICAvLyDlr4bnoIHnmoTmoKHpqozmlrnms5UKICAgIGxldCB2YWxpZGF0ZVBhc3MgPSAocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSA9PiB7CiAgICAgIGlmICh2YWx1ZSA9PT0gIiIpIHsKICAgICAgICByZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKCLor7fovpPlhaXlr4bnoIEiKSk7CiAgICAgIH0KICAgICAgLy8g5a+G56CB5Lul5a2X5q+N5byA5aS0LOmVv+W6puWcqDYtMTjkuYvpl7Qs5YWB6K645a2X5q+N5pWw5a2X5ZKM5LiL5YiS57q/CiAgICAgIGNvbnN0IHBhc3N3b3JkUnVsZSA9IC9eW2EtekEtWl1cd3s1LDE3fSQvOwogICAgICBpZiAocGFzc3dvcmRSdWxlLnRlc3QodmFsdWUpKSB7CiAgICAgICAgdGhpcy4kcmVmcy5ydWxlRm9ybS52YWxpZGF0ZUZpZWxkKCJjaGVja1Bhc3MiKTsKICAgICAgICByZXR1cm4gY2FsbGJhY2soKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gY2FsbGJhY2soCiAgICAgICAgICBuZXcgRXJyb3IoIuWtl+avjeW8gOWktCzplb/luqY2LTE45LmL6Ze0LOWFgeiuuOWtl+avjeaVsOWtl+WSjOS4i+WIkue6vyIpCiAgICAgICAgKTsKICAgICAgfQogICAgfTsKICAgIC8vIOehruiupOWvhueggeeahOagoemqjOaWueazlQogICAgbGV0IHZhbGlkYXRlQ29uZmlybVBhc3MgPSAocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSA9PiB7CiAgICAgIGlmICh2YWx1ZSA9PT0gIiIpIHsKICAgICAgICByZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKCLor7fovpPlhaXnoa7orqTlr4bnoIEiKSk7CiAgICAgIH0KICAgICAgLy8g5qCh6aqM5piv5ZCm5Lul5a+G56CB5LiA6Ie0CiAgICAgIGlmICh0aGlzLlJlZ2lzdGVyVXNlci5wYXNzICE9ICIiICYmIHZhbHVlID09PSB0aGlzLlJlZ2lzdGVyVXNlci5wYXNzKSB7CiAgICAgICAgdGhpcy4kcmVmcy5ydWxlRm9ybS52YWxpZGF0ZUZpZWxkKCJjaGVja1Bhc3MiKTsKICAgICAgICByZXR1cm4gY2FsbGJhY2soKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKCLkuKTmrKHovpPlhaXnmoTlr4bnoIHkuI3kuIDoh7QiKSk7CiAgICAgIH0KICAgIH07CiAgICByZXR1cm4gewogICAgICBpc1JlZ2lzdGVyOiBmYWxzZSwgLy8g5o6n5Yi25rOo5YaM57uE5Lu25piv5ZCm5pi+56S6CiAgICAgIFJlZ2lzdGVyVXNlcjogewogICAgICAgIG5pY2tOYW1lOiIiLAogICAgICAgIG1vYmlsZTogIiIsCiAgICAgICAgcGFzczogIiIsCiAgICAgICAgY29uZmlybVBhc3M6ICIiCiAgICAgIH0sCiAgICAgIC8vIOeUqOaIt+S/oeaBr+agoemqjOinhOWImSx2YWxpZGF0b3Io5qCh6aqM5pa55rOVKSx0cmlnZ2VyKOinpuWPkeaWueW8jyksYmx1cuS4uuWcqOe7hOS7tiBJbnB1dCDlpLHljrvnhKbngrnml7bop6blj5EKICAgICAgcnVsZXM6IHsKICAgICAgICBtb2JpbGU6IFt7IHZhbGlkYXRvcjogdmFsaWRhdGVNb2JpbGUsIHRyaWdnZXI6ICJibHVyIiB9XSwKICAgICAgICBwYXNzOiBbeyB2YWxpZGF0b3I6IHZhbGlkYXRlUGFzcywgdHJpZ2dlcjogImJsdXIiIH1dLAogICAgICAgIGNvbmZpcm1QYXNzOiBbeyB2YWxpZGF0b3I6IHZhbGlkYXRlQ29uZmlybVBhc3MsIHRyaWdnZXI6ICJibHVyIiB9XQogICAgICB9CiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIC8vIOebkeWQrOeItue7hOS7tuS8oOi/h+adpeeahHJlZ2lzdGVy5Y+Y6YeP77yM6K6+572udGhpcy5pc1JlZ2lzdGVy55qE5YC8CiAgICByZWdpc3RlcjogZnVuY3Rpb24odmFsKSB7CiAgICAgIGlmICh2YWwpIHsKICAgICAgICB0aGlzLmlzUmVnaXN0ZXIgPSB2YWw7CiAgICAgIH0KICAgIH0sCiAgICAvLyDnm5HlkKx0aGlzLmlzUmVnaXN0ZXLlj5jph4/nmoTlgLzvvIzmm7TmlrDniLbnu4Tku7ZyZWdpc3RlcuWPmOmHj+eahOWAvAogICAgaXNSZWdpc3RlcjogZnVuY3Rpb24odmFsKSB7CiAgICAgIGlmICghdmFsKSB7CiAgICAgICAgdGhpcy4kcmVmc1sicnVsZUZvcm0iXS5yZXNldEZpZWxkcygpOwogICAgICAgIHRoaXMuJGVtaXQoImZyb21DaGlsZCIsIHZhbCk7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIFJlZ2lzdGVyKCkgewogICAgICAvLyDpgJrov4dlbGVtZW506Ieq5a6a5LmJ6KGo5Y2V5qCh6aqM6KeE5YiZ77yM5qCh6aqM55So5oi36L6T5YWl55qE55So5oi35L+h5oGvCiAgICAgIHRoaXMuJHJlZnNbInJ1bGVGb3JtIl0udmFsaWRhdGUodmFsaWQgPT4gewogICAgICAgIC8v5aaC5p6c6YCa6L+H5qCh6aqM5byA5aeL5rOo5YaMCiAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICBsZXQgc2FsdCA9ICIxYTJiM2M0ZCI7CiAgICAgICAgICB2YXIgc3RyID0gIiIgKyBzYWx0LmNoYXJBdCgwKSArIHNhbHQuY2hhckF0KDIpICsgdGhpcy5SZWdpc3RlclVzZXIucGFzcyArIHNhbHQuY2hhckF0KDUpICsgc2FsdC5jaGFyQXQoNCk7CiAgICAgICAgICB0aGlzLlJlZ2lzdGVyVXNlci5wYXNzID0gbWQ1KHNhbHQgKyBzdHIpOwogICAgICAgICAgdGhpcy4kYXhpb3MKICAgICAgICAgICAgLnBvc3QoIi9hcGkvbG9naW4vZG9SZWdpc3RlciIsIHsKICAgICAgICAgICAgICBuaWNrTmFtZTp0aGlzLlJlZ2lzdGVyVXNlci5uaWNrTmFtZSwKICAgICAgICAgICAgICBtb2JpbGU6IHRoaXMuUmVnaXN0ZXJVc2VyLm1vYmlsZSwKICAgICAgICAgICAgICBwYXNzd29yZDogdGhpcy5SZWdpc3RlclVzZXIucGFzcwogICAgICAgICAgICB9KQogICAgICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgICAgIAogICAgICAgICAgICAgIGlmKHJlcy5kYXRhLmNvZGUgPT09IDIwMCl7CiAgICAgICAgICAgICAgICAvL+makOiXj+azqOWGjOe7hOS7tu+8jOaPkOekuuazqOWGjOaIkOWKn+a2iOaBrwogICAgICAgICAgICAgICAgdGhpcy5pc1JlZ2lzdGVyID0gZmFsc2U7CiAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeVN1Y2NlZWQoIuazqOWGjOaIkOWKnyIpOwogICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgdGhpcy5ub3RpZnlFcnJvcihyZXMuZGF0YS5tZXNzYWdlKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAvLyAvLyDigJwwMDHigJ3ku6Pooajms6jlhozmiJDlip/vvIzlhbbku5bnmoTlnYfkuLrlpLHotKUKICAgICAgICAgICAgICAvLyBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgIC8vICAgLy8g6ZqQ6JeP5rOo5YaM57uE5Lu2CiAgICAgICAgICAgICAgLy8gICB0aGlzLmlzUmVnaXN0ZXIgPSBmYWxzZTsKICAgICAgICAgICAgICAvLyAgIC8vIOW8ueWHuumAmuefpeahhuaPkOekuuazqOWGjOaIkOWKn+S/oeaBrwogICAgICAgICAgICAgIC8vICAgdGhpcy5ub3RpZnlTdWNjZWVkKCLms6jlhozmiJDlip8iKTsKICAgICAgICAgICAgICAvLyB9IGVsc2UgewogICAgICAgICAgICAgIC8vICAgLy8g5by55Ye66YCa55+l5qGG5o+Q56S65rOo5YaM5aSx6LSl5L+h5oGvCiAgICAgICAgICAgICAgLy8gICB0aGlzLm5vdGlmeUVycm9yKHJlcy5tZXNzYWdlKTsKICAgICAgICAgICAgICAvLyB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5jYXRjaChlcnIgPT4gewogICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnIpOwogICAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["MyRegister.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyRegister.vue","sourceRoot":"src/components","sourcesContent":["<!--\n * @Description: 用户注册组件\n * @Author: hai-27\n * @Date: 2020-02-19 22:20:35\n * @LastEditors: hai-27\n * @LastEditTime: 2020-03-01 15:34:34\n -->\n<template>\n  <div id=\"register\">\n    <el-dialog title=\"注册\" width=\"300px\" center :visible.sync=\"isRegister\">\n      <el-form\n        :model=\"RegisterUser\"\n        :rules=\"rules\"\n        status-icon\n        ref=\"ruleForm\"\n        class=\"demo-ruleForm\"\n      >\n        <el-form-item prop=\"nickName\">\n          <el-input\n            prefix-icon=\"el-icon-user-solid\"\n            placeholder=\"请输入用户昵称\"\n            v-model=\"RegisterUser.nickName\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item prop=\"mobile\">\n          <el-input\n            prefix-icon=\"el-icon-user-solid\"\n            placeholder=\"请输入账号\"\n            v-model=\"RegisterUser.mobile\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item prop=\"pass\">\n          <el-input\n            prefix-icon=\"el-icon-view\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            v-model=\"RegisterUser.pass\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item prop=\"confirmPass\">\n          <el-input\n            prefix-icon=\"el-icon-view\"\n            type=\"password\"\n            placeholder=\"请再次输入密码\"\n            v-model=\"RegisterUser.confirmPass\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button size=\"medium\" type=\"primary\" @click=\"Register\" style=\"width:100%;\">注册</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport md5 from 'js-md5'\nexport default {\n  name: \"MyRegister\",\n  props: [\"register\"],\n  data() {\n    // 用户名的校验方法\n    let validateMobile = (rule, value, callback) => {\n      const phoneReg = /^1[3-9]\\d{9}$/\n      if (!value) {\n        return callback(new Error('请输入手机号码'))\n      }\n      if (phoneReg.test(value)) {\n        callback()\n      } else {\n        callback(new Error('请输入正确的手机号码'))\n      }\n    };\n    // 密码的校验方法\n    let validatePass = (rule, value, callback) => {\n      if (value === \"\") {\n        return callback(new Error(\"请输入密码\"));\n      }\n      // 密码以字母开头,长度在6-18之间,允许字母数字和下划线\n      const passwordRule = /^[a-zA-Z]\\w{5,17}$/;\n      if (passwordRule.test(value)) {\n        this.$refs.ruleForm.validateField(\"checkPass\");\n        return callback();\n      } else {\n        return callback(\n          new Error(\"字母开头,长度6-18之间,允许字母数字和下划线\")\n        );\n      }\n    };\n    // 确认密码的校验方法\n    let validateConfirmPass = (rule, value, callback) => {\n      if (value === \"\") {\n        return callback(new Error(\"请输入确认密码\"));\n      }\n      // 校验是否以密码一致\n      if (this.RegisterUser.pass != \"\" && value === this.RegisterUser.pass) {\n        this.$refs.ruleForm.validateField(\"checkPass\");\n        return callback();\n      } else {\n        return callback(new Error(\"两次输入的密码不一致\"));\n      }\n    };\n    return {\n      isRegister: false, // 控制注册组件是否显示\n      RegisterUser: {\n        nickName:\"\",\n        mobile: \"\",\n        pass: \"\",\n        confirmPass: \"\"\n      },\n      // 用户信息校验规则,validator(校验方法),trigger(触发方式),blur为在组件 Input 失去焦点时触发\n      rules: {\n        mobile: [{ validator: validateMobile, trigger: \"blur\" }],\n        pass: [{ validator: validatePass, trigger: \"blur\" }],\n        confirmPass: [{ validator: validateConfirmPass, trigger: \"blur\" }]\n      }\n    };\n  },\n  watch: {\n    // 监听父组件传过来的register变量，设置this.isRegister的值\n    register: function(val) {\n      if (val) {\n        this.isRegister = val;\n      }\n    },\n    // 监听this.isRegister变量的值，更新父组件register变量的值\n    isRegister: function(val) {\n      if (!val) {\n        this.$refs[\"ruleForm\"].resetFields();\n        this.$emit(\"fromChild\", val);\n      }\n    }\n  },\n  methods: {\n    Register() {\n      // 通过element自定义表单校验规则，校验用户输入的用户信息\n      this.$refs[\"ruleForm\"].validate(valid => {\n        //如果通过校验开始注册\n        if (valid) {\n          let salt = \"1a2b3c4d\";\n          var str = \"\" + salt.charAt(0) + salt.charAt(2) + this.RegisterUser.pass + salt.charAt(5) + salt.charAt(4);\n          this.RegisterUser.pass = md5(salt + str);\n          this.$axios\n            .post(\"/api/login/doRegister\", {\n              nickName:this.RegisterUser.nickName,\n              mobile: this.RegisterUser.mobile,\n              password: this.RegisterUser.pass\n            })\n            .then(res => {\n              \n              if(res.data.code === 200){\n                //隐藏注册组件，提示注册成功消息\n                this.isRegister = false;\n                this.notifySucceed(\"注册成功\");\n              }else{\n                this.notifyError(res.data.message)\n              }\n              // // “001”代表注册成功，其他的均为失败\n              // if (res.code === 200) {\n              //   // 隐藏注册组件\n              //   this.isRegister = false;\n              //   // 弹出通知框提示注册成功信息\n              //   this.notifySucceed(\"注册成功\");\n              // } else {\n              //   // 弹出通知框提示注册失败信息\n              //   this.notifyError(res.message);\n              // }\n            })\n            .catch(err => {\n              return Promise.reject(err);\n            });\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};\n</script>\n<style>\n</style>"]}]}