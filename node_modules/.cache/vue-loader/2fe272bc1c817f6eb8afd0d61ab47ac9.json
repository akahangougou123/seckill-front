{"remainingRequest":"/Users/akahandao/Desktop/毕业设计/vue-store/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/akahandao/Desktop/毕业设计/vue-store/src/components/MyLogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/akahandao/Desktop/毕业设计/vue-store/src/components/MyLogin.vue","mtime":1678103697858},{"path":"/Users/akahandao/Desktop/毕业设计/vue-store/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akahandao/Desktop/毕业设计/vue-store/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/akahandao/Desktop/毕业设计/vue-store/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akahandao/Desktop/毕业设计/vue-store/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICJ2dWV4IjsKCgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJNeUxvZ2luIiwKICBkYXRhKCkgewogICAgLy8g55So5oi35ZCN55qE5qCh6aqM5pa55rOVCiAgICBsZXQgdmFsaWRhdGVOYW1lID0gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPT4gewogICAgICBpZiAoIXZhbHVlKSB7CiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG5ldyBFcnJvcigi6K+36L6T5YWl55So5oi35ZCNIikpOwogICAgICB9CiAgICAgIC8vIOeUqOaIt+WQjeS7peWtl+avjeW8gOWktCzplb/luqblnKg1LTE25LmL6Ze0LOWFgeiuuOWtl+avjeaVsOWtl+S4i+WIkue6vwogICAgICBjb25zdCB1c2VyTmFtZVJ1bGUgPSAvXlthLXpBLVpdW2EtekEtWjAtOV9dezQsMTV9JC87CiAgICAgIGlmICh1c2VyTmFtZVJ1bGUudGVzdCh2YWx1ZSkpIHsKICAgICAgICB0aGlzLiRyZWZzLnJ1bGVGb3JtLnZhbGlkYXRlRmllbGQoImNoZWNrUGFzcyIpOwogICAgICAgIHJldHVybiBjYWxsYmFjaygpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBjYWxsYmFjayhuZXcgRXJyb3IoIuWtl+avjeW8gOWktCzplb/luqY1LTE25LmL6Ze0LOWFgeiuuOWtl+avjeaVsOWtl+S4i+WIkue6vyIpKTsKICAgICAgfQogICAgfTsKICAgIC8vIOWvhueggeeahOagoemqjOaWueazlQogICAgbGV0IHZhbGlkYXRlUGFzcyA9IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsKICAgICAgaWYgKHZhbHVlID09PSAiIikgewogICAgICAgIHJldHVybiBjYWxsYmFjayhuZXcgRXJyb3IoIuivt+i+k+WFpeWvhueggSIpKTsKICAgICAgfQogICAgICAvLyDlr4bnoIHku6XlrZfmr43lvIDlpLQs6ZW/5bqm5ZyoNi0xOOS5i+mXtCzlhYHorrjlrZfmr43mlbDlrZflkozkuIvliJLnur8KICAgICAgY29uc3QgcGFzc3dvcmRSdWxlID0gL15bYS16QS1aXVx3ezUsMTd9JC87CiAgICAgIGlmIChwYXNzd29yZFJ1bGUudGVzdCh2YWx1ZSkpIHsKICAgICAgICB0aGlzLiRyZWZzLnJ1bGVGb3JtLnZhbGlkYXRlRmllbGQoImNoZWNrUGFzcyIpOwogICAgICAgIHJldHVybiBjYWxsYmFjaygpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBjYWxsYmFjaygKICAgICAgICAgIG5ldyBFcnJvcigi5a2X5q+N5byA5aS0LOmVv+W6pjYtMTjkuYvpl7Qs5YWB6K645a2X5q+N5pWw5a2X5ZKM5LiL5YiS57q/IikKICAgICAgICApOwogICAgICB9CiAgICB9OwogICAgcmV0dXJuIHsKICAgICAgTG9naW5Vc2VyOiB7CiAgICAgICAgbmFtZTogIiIsCiAgICAgICAgcGFzczogIiIKICAgICAgfSwKICAgICAgLy8g55So5oi35L+h5oGv5qCh6aqM6KeE5YiZLHZhbGlkYXRvcijmoKHpqozmlrnms5UpLHRyaWdnZXIo6Kem5Y+R5pa55byPKSxibHVy5Li65Zyo57uE5Lu2IElucHV0IOWkseWOu+eEpueCueaXtuinpuWPkQogICAgICBydWxlczogewogICAgICAgIG5hbWU6IFt7IHZhbGlkYXRvcjogdmFsaWRhdGVOYW1lLCB0cmlnZ2VyOiAiYmx1ciIgfV0sCiAgICAgICAgcGFzczogW3sgdmFsaWRhdG9yOiB2YWxpZGF0ZVBhc3MsIHRyaWdnZXI6ICJibHVyIiB9XQogICAgICB9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIOiOt+WPlnZ1ZXjkuK3nmoRzaG93TG9naW7vvIzmjqfliLbnmbvlvZXnu4Tku7bmmK/lkKbmmL7npLoKICAgIGlzTG9naW46IHsKICAgICAgZ2V0KCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldFNob3dMb2dpbjsKICAgICAgfSwKICAgICAgc2V0KHZhbCkgewogICAgICAgIHRoaXMuJHJlZnNbInJ1bGVGb3JtIl0ucmVzZXRGaWVsZHMoKTsKICAgICAgICB0aGlzLnNldFNob3dMb2dpbih2YWwpOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAuLi5tYXBBY3Rpb25zKFsic2V0VXNlciIsICJzZXRTaG93TG9naW4iXSksCiAgICBMb2dpbigpIHsKICAgICAgLy8g6YCa6L+HZWxlbWVudOiHquWumuS5ieihqOWNleagoemqjOinhOWIme+8jOagoemqjOeUqOaIt+i+k+WFpeeahOeUqOaIt+S/oeaBrwogICAgICB0aGlzLiRyZWZzWyJydWxlRm9ybSJdLnZhbGlkYXRlKHZhbGlkID0+IHsKICAgICAgICAvL+WmguaenOmAmui/h+agoemqjOW8gOWni+eZu+W9lQogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgLy8gbGV0IGZvcm1QYXNzd29yZCA9IHRoaXMuTG9naW5Vc2VyLnBhc3M7CiAgICAgICAgICB2YXIgc2FsdCA9IGNvbW1vbi5nX3Bhc3N3b3JkX3NhbHQ7CiAgICAgICAgICB2YXIgc3RyID0gIiIrc2FsdC5jaGFyQXQoMCkgKyBzYWx0LmNoYXJBdCgyKSArIGlucHV0UGFzcyArIHNhbHQuY2hhckF0KDUpICsgc2FsdC5jaGFyQXQoNCk7CiAgICAgICAgICB2YXIgcGFzc3dvcmQgPSBtZDUoc3RyKTsKICAgICAgICAgIHRoaXMuJGF4aW9zCiAgICAgICAgICAgIC5wb3N0KCIvYXBpL3VzZXJzL2xvZ2luIiwgewogICAgICAgICAgICAgIHVzZXJOYW1lOiB0aGlzLkxvZ2luVXNlci5uYW1lLAogICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgICAgICAgICB9KQogICAgICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgICAgIC8vIOKAnDAwMeKAneS7o+ihqOeZu+W9leaIkOWKn++8jOWFtuS7lueahOWdh+S4uuWksei0pQogICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5jb2RlID09PSAiMDAxIikgewogICAgICAgICAgICAgICAgLy8g6ZqQ6JeP55m75b2V57uE5Lu2CiAgICAgICAgICAgICAgICB0aGlzLmlzTG9naW4gPSBmYWxzZTsKICAgICAgICAgICAgICAgIC8vIOeZu+W9leS/oeaBr+WtmOWIsOacrOWcsAogICAgICAgICAgICAgICAgbGV0IHVzZXIgPSBKU09OLnN0cmluZ2lmeShyZXMuZGF0YS51c2VyKTsKICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ1c2VyIiwgdXNlcik7CiAgICAgICAgICAgICAgICAvLyDnmbvlvZXkv6Hmga/lrZjliLB2dWV4CiAgICAgICAgICAgICAgICB0aGlzLnNldFVzZXIocmVzLmRhdGEudXNlcik7CiAgICAgICAgICAgICAgICAvLyDlvLnlh7rpgJrnn6XmoYbmj5DnpLrnmbvlvZXmiJDlip/kv6Hmga8KICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5U3VjY2VlZChyZXMuZGF0YS5tc2cpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAvLyDmuIXnqbrovpPlhaXmoYbnmoTmoKHpqoznirbmgIEKICAgICAgICAgICAgICAgIHRoaXMuJHJlZnNbInJ1bGVGb3JtIl0ucmVzZXRGaWVsZHMoKTsKICAgICAgICAgICAgICAgIC8vIOW8ueWHuumAmuefpeahhuaPkOekuueZu+W9leWksei0peS/oeaBrwogICAgICAgICAgICAgICAgdGhpcy5ub3RpZnlFcnJvcihyZXMuZGF0YS5tc2cpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7CiAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycik7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["MyLogin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyLogin.vue","sourceRoot":"src/components","sourcesContent":["<!--\n * @Description: 登录组件\n * @Author: hai-27\n * @Date: 2020-02-19 20:55:17\n * @LastEditors: hai-27\n * @LastEditTime: 2020-03-01 15:34:08\n -->\n<template>\n  <div id=\"myLogin\">\n    <el-dialog title=\"登录\" width=\"300px\" center :visible.sync=\"isLogin\">\n      <el-form :model=\"LoginUser\" :rules=\"rules\" status-icon ref=\"ruleForm\" class=\"demo-ruleForm\">\n        <el-form-item prop=\"name\">\n          <el-input prefix-icon=\"el-icon-user-solid\" placeholder=\"请输入账号\" v-model=\"LoginUser.name\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"pass\">\n          <el-input\n            prefix-icon=\"el-icon-view\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            v-model=\"LoginUser.pass\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button size=\"medium\" type=\"primary\" @click=\"Login\" style=\"width:100%;\">登录</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport { mapActions } from \"vuex\";\n\n\n\nexport default {\n  name: \"MyLogin\",\n  data() {\n    // 用户名的校验方法\n    let validateName = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"请输入用户名\"));\n      }\n      // 用户名以字母开头,长度在5-16之间,允许字母数字下划线\n      const userNameRule = /^[a-zA-Z][a-zA-Z0-9_]{4,15}$/;\n      if (userNameRule.test(value)) {\n        this.$refs.ruleForm.validateField(\"checkPass\");\n        return callback();\n      } else {\n        return callback(new Error(\"字母开头,长度5-16之间,允许字母数字下划线\"));\n      }\n    };\n    // 密码的校验方法\n    let validatePass = (rule, value, callback) => {\n      if (value === \"\") {\n        return callback(new Error(\"请输入密码\"));\n      }\n      // 密码以字母开头,长度在6-18之间,允许字母数字和下划线\n      const passwordRule = /^[a-zA-Z]\\w{5,17}$/;\n      if (passwordRule.test(value)) {\n        this.$refs.ruleForm.validateField(\"checkPass\");\n        return callback();\n      } else {\n        return callback(\n          new Error(\"字母开头,长度6-18之间,允许字母数字和下划线\")\n        );\n      }\n    };\n    return {\n      LoginUser: {\n        name: \"\",\n        pass: \"\"\n      },\n      // 用户信息校验规则,validator(校验方法),trigger(触发方式),blur为在组件 Input 失去焦点时触发\n      rules: {\n        name: [{ validator: validateName, trigger: \"blur\" }],\n        pass: [{ validator: validatePass, trigger: \"blur\" }]\n      }\n    };\n  },\n  computed: {\n    // 获取vuex中的showLogin，控制登录组件是否显示\n    isLogin: {\n      get() {\n        return this.$store.getters.getShowLogin;\n      },\n      set(val) {\n        this.$refs[\"ruleForm\"].resetFields();\n        this.setShowLogin(val);\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\"setUser\", \"setShowLogin\"]),\n    Login() {\n      // 通过element自定义表单校验规则，校验用户输入的用户信息\n      this.$refs[\"ruleForm\"].validate(valid => {\n        //如果通过校验开始登录\n        if (valid) {\n          // let formPassword = this.LoginUser.pass;\n          var salt = common.g_password_salt;\n          var str = \"\"+salt.charAt(0) + salt.charAt(2) + inputPass + salt.charAt(5) + salt.charAt(4);\n          var password = md5(str);\n          this.$axios\n            .post(\"/api/users/login\", {\n              userName: this.LoginUser.name,\n              password: password\n            })\n            .then(res => {\n              // “001”代表登录成功，其他的均为失败\n              if (res.data.code === \"001\") {\n                // 隐藏登录组件\n                this.isLogin = false;\n                // 登录信息存到本地\n                let user = JSON.stringify(res.data.user);\n                localStorage.setItem(\"user\", user);\n                // 登录信息存到vuex\n                this.setUser(res.data.user);\n                // 弹出通知框提示登录成功信息\n                this.notifySucceed(res.data.msg);\n              } else {\n                // 清空输入框的校验状态\n                this.$refs[\"ruleForm\"].resetFields();\n                // 弹出通知框提示登录失败信息\n                this.notifyError(res.data.msg);\n              }\n            })\n            .catch(err => {\n              return Promise.reject(err);\n            });\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};\n</script>\n<style>\n</style>"]}]}